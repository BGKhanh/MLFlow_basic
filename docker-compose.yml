version: '3.8'

services:
  # CIFAR-10 API Service
  cifar-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cifar10-api
    ports:
      - "8000:8000"
    volumes:
      # Mount checkpoints directory to persist models
      - ./checkpoints:/app/checkpoints
      # Mount data directory for datasets
      - ./data:/app/data
      # Mount MLflow runs for experiment tracking
      - ./mlruns:/app/mlruns
      - ./logs:/app/logs
    environment:
      - PYTHONPATH=/app
      - CUDA_VISIBLE_DEVICES=""  # CPU only for API
      - ENABLE_METRICS=true       # Enable Prometheus metrics
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - cifar-network

  # Prometheus Server
  prometheus:
    image: prom/prometheus:latest
    container_name: cifar10-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
      - '--storage.tsdb.retention.time=7d'  # 7 days retention
    restart: unless-stopped
    networks:
      - cifar-network
    depends_on:
      - cifar-api

  # Alertmanager
  alertmanager:
    image: prom/alertmanager:latest
    container_name: cifar10-alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./monitoring/alertmanager:/etc/alertmanager
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
      - '--data.retention=7d'  # 7 days retention
    restart: unless-stopped
    networks:
      - cifar-network
    depends_on:
      - prometheus

  # Grafana Dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: cifar10-grafana
    ports:
      - "3000:3000"
    volumes:
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/etc/grafana/dashboards
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
      - GF_INSTALL_PLUGINS=
      - GF_SERVER_ROOT_URL=http://localhost:3000
    restart: unless-stopped
    networks:
      - cifar-network
    depends_on:
      - prometheus

  # MLflow Tracking Server (Optional)
  mlflow-server:
    image: python:3.11-slim
    container_name: mlflow-tracking
    ports:
      - "5000:5000"
    volumes:
      - ./mlruns:/mlruns
    working_dir: /
    command: >
      bash -c "
        pip install mlflow &&
        mlflow server 
          --backend-store-uri file:///mlruns 
          --default-artifact-root file:///mlruns
          --host 0.0.0.0 
          --port 5000
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    networks:
      - cifar-network

networks:
  cifar-network:
    driver: bridge

volumes:
  checkpoints:
  mlruns:
  data:
  prometheus_data:
  alertmanager_data:
  grafana_data: